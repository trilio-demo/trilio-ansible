# code: language=ansible

# Set of tasks for creating a Trilio for Kubernetes Backup where auth is password
#
# Authors: Kevin Jackson <kevin.jackson at trilio io>

- name: Execute Backup Tasks
  tags: ['backup', 'backupplan', 'smoketest', 'autoprotect']
  block:
    - name: Configure the backup using {{ tvk_backupplan_name }}
      ansible.builtin.template:
        src: templates/backup.yaml.j2
        dest: /tmp/{{ tvk_backupplan_name }}-backup.yaml
        mode: 0640

    # Create the specified backup plan in specifed namespace
    - name: Execute the {{ tvk_backup_type }} backup {{ tvk_backupplan_name }}-{{ ansible_date_time.date }}-{{ ansible_date_time.epoch }}
      when: k8s_auth_type == "password"
      kubernetes.core.k8s:
        api_key: "{{ k8s_auth_results.k8s_auth.api_key }}"
        kind: Backup
        state: present # State=present when you need to create new object
        namespace: "{{ tvk_namespace }}" # defining the namespace
        src: "/tmp/{{ tvk_backupplan_name }}-backup.yaml"
        validate_certs: false
      register: backup

    - name: Wait for {{ tvk_backup_type }} {{ tvk_backupplan_name }}-{{ ansible_date_time.date }}-{{ ansible_date_time.epoch }}
      ansible.builtin.shell: |
        oc login "{{ k8s_auth_api }}" --token="{{ openshift_auth_results.openshift_auth.api_key }}" --insecure-skip-tls-verify=true 2>&/dev/null
        oc get backups/{{ tvk_backupplan_name }}-{{ ansible_date_time.date }}-{{ ansible_date_time.epoch }} -n {{ tvk_namespace }}
      register: backup_available
      retries: "{{ tvk_backup_polling_retries }}"
      delay: "{{ tvk_backup_polling_every_seconds }}"
      until: backup_available.stdout.find("Available") != -1
      ignore_errors: true
      when:
        - k8s_auth_type == "password"
        - k8s_distro == "openshift"
        
    - name: Show Backup created output
      ansible.builtin.debug: var=backup_available.stdout_lines
