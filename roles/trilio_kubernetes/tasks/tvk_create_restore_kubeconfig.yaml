# code: language=ansible

# Set of tasks for creating performing a Trilio for Kubernetes Restore when using kubeconfig
#
# Authors: Kevin Jackson <kevin.jackson at trilio io>

- name: Create Restore Tasks
  tags: ['restore', 'smoketest']
  block:
    - name: Create Restore Namespace
      ansible.builtin.include_tasks: tvk_create_ns.yaml
      vars:
        tvk_namespace: "{{ tvk_restore_namespace }}"

    - name: Set restore name
      ansible.builtin.set_fact:
        tvk_restore_name: "{{ tvk_backupplan_name }}-{{ ansible_date_time.date }}-{{ ansible_date_time.epoch }}"

    - name: Configure the restore from {{ tvk_backupplan_name }}
      ansible.builtin.template:
        src: templates/restore.yaml.j2
        dest: /tmp/{{ tvk_backupplan_name }}-restore.yaml
        mode: 0600

    # Execute the specified backup restore in specifed namespace
    - name: Execute the restore of {{ tvk_restore_name }}
      kubernetes.core.k8s:
        api_key: "{{ k8s_auth_results.k8s_auth.api_key }}"
        kind: Restore
        state: present
        namespace: "{{ tvk_restore_namespace }}"
        src: "/tmp/{{ tvk_backupplan_name }}-restore.yaml"
        validate_certs: false
      register: restore

    # TODO: if not using kubeconfig auth, how to do kubectl?
    - name: Wait for restore of {{ tvk_restore_name }}
      when: k8s_auth_type == "kubeconfig"
      ansible.builtin.shell: >
        kubectl get restores/{{ tvk_restore_name }} -n {{ tvk_restore_namespace }}
      environment:
        KUBECONFIG: "{{ kubeconfig }}"
      register: restore_available
      retries: "{{ tvk_restore_retries }}"
      delay: "{{ tvk_restore_delay_seconds }}"
      until: restore_available.stdout.find("Completed") != -1
      ignore_errors: true
