# code: language=ansible

# Set of tasks for creating a Trilio for Kubernetes Backup Plan in a namespace
# for describing what and where to backup
#
# Authors: Kevin Jackson <kevin.jackson at trilio io>

- name: Create Backup Plan Tasks
  tags: ['backup', 'backupplan', 'smoketest', 'autoprotect']
  block:
  - name: Configure the backup plan in {{ trilio_kubernetes_namespace_create }}
    ansible.builtin.template:
      src: templates/backupplan.yaml.j2
      dest: /tmp/{{ trilio_kubernetes_backupplan_name }}-backupplan.yaml
      mode: "0600"

  # Create the specified backup plan in specifed namespace
  # - name: Create the backup plan "{{ trilio_kubernetes_backupplan_name }}"
  #  kubernetes.core.k8s:
  #    kind: BackupPlan
  #    state: present
  #    namespace: "{{ trilio_kubernetes_namespace_create }}"
  #    src: "/tmp/{{ trilio_kubernetes_backupplan_name }}-backupplan.yaml"
  #    validate_certs: false
  #  register: trilio_kubernetes_backupplan

  # Create the specified backup plan in specifed namespace
  - name: Create for the backup plan "{{ trilio_kubernetes_backupplan_name }}"
    kubernetes.core.k8s:
      kind: BackupPlan
      state: present
      namespace: "{{ trilio_kubernetes_namespace_create }}"
      src: "/tmp/{{ trilio_kubernetes_backupplan_name }}-backupplan.yaml"
      validate_certs: false
    register: trilio_kubernetes_backupplan

  - name: Wait for backup plan to be created
    ansible.builtin.pause:
      seconds: 10

  - name: Show backup plan created output
    #- name: Wait for scheduling of backup plan creation
    #  ansible.builtin.pause:
    #    seconds: 30

    #- name: Check the backup plan has started
    #  kubernetes.core.k8s_info:
    #    kind: BackupPlan
    #    name: "{{ trilio_kubernetes_backupplan_name }}"
    #    namespace: "{{ trilio_kubernetes_namespace_create }}"
    #  register: trilio_kubernetes_backupplan_check

    #- name: Wait for the backup plan to be available
    #  kubernetes.core.k8s_info:
    #    kind: BackupPlan
    #    name: "{{ trilio_kubernetes_backupplan_name }}"
    #    namespace: "{{ trilio_kubernetes_namespace_create }}"
    #  register: trilio_kubernetes_backupplan
    #  until: trilio_kubernetes_backupplan.result.status.status == "Available"
    #  retries: 5
    #  delay: 10

    #    - name: Wait for the backup plan to be created "{{ trilio_kubernetes_backupplan_name }}"
    #      when: trilio_kubernetes_auth_type == "kubeconfig"
    #      ansible.builtin.shell: >
    #        kubectl get backupplans/"{{ trilio_kubernetes_backupplan_name }}" -n {{ trilio_kubernetes_namespace_create }}
    #      environment:
    #        KUBECONFIG: "{{ kubeconfig }}"
    #      register: trilio_kubernetes_backupplan_available
    #      retries: 5
    #      delay: 5
    #      until: trilio_kubernetes_backupplan_available.stdout.find("Available") != -1
    #      ignore_errors: true

    ansible.builtin.debug:
      var: trilio_kubernetes_backupplan.result.status.status
